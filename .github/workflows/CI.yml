name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ "3.13" ]

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v5

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # 3. Install build tools
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel pytest pytest-cov
          pip install mpich mpi4py

      # 4. Install project dependencies (cached via setup-python)
      - name: Install project requirements
        run: |
          pip install -r requirements.txt

      # 5. Build wheel (ensures package is installable)
      - name: Build wheel
        run: |
          python -m build --wheel

      # 6. Install wheel
      - name: Install wheel
        run: |
          pip install $(python -c "import glob; print(glob.glob('dist/*.whl')[0])")

      # 7. Run tests with coverage
      - name: Run tests
        run: |
          pytest tests --cov=moldga --cov-report=term-missing --cov-report=xml -vv
        # pytest tests --cov=moldga --cov-report=xml --cov-report=term

      # 8. Upload coverage to Codecov (requires CODECOV_TOKEN for private repos)
      - name: Upload test results to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
